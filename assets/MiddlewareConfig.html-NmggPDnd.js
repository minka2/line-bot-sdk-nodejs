import{_ as d,r,o as s,c,a as e,d as t,w as i,b as n,e as l}from"./app-d6ODzTmM.js";const h={},f=e("h1",{id:"interface-middlewareconfig",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interface-middlewareconfig","aria-hidden":"true"},"#"),n(" Interface: MiddlewareConfig")],-1),_=e("h2",{id:"hierarchy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hierarchy","aria-hidden":"true"},"#"),n(" Hierarchy")],-1),u=e("code",null,"Config",-1),p=e("p",null,[n("↳ "),e("strong",null,[e("code",null,"MiddlewareConfig")])],-1),b=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),n(" Table of contents")],-1),g=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),n(" Properties")],-1),m=l('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="channelaccesstoken" tabindex="-1"><a class="header-anchor" href="#channelaccesstoken" aria-hidden="true">#</a> channelAccessToken</h3><p>• <code>Optional</code> <strong>channelAccessToken</strong>: <code>string</code></p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4>',4),k=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),n(" Defined in")],-1),x={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/types.ts#L7",target:"_blank",rel:"noopener noreferrer"},C=e("hr",null,null,-1),w=e("h3",{id:"channelsecret",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#channelsecret","aria-hidden":"true"},"#"),n(" channelSecret")],-1),y=e("p",null,[n("• "),e("strong",null,"channelSecret"),n(": "),e("code",null,"string")],-1),M=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides","aria-hidden":"true"},"#"),n(" Overrides")],-1),v=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),n(" Defined in")],-1),L={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/types.ts#L17",target:"_blank",rel:"noopener noreferrer"};function T(S,A){const a=r("RouterLink"),o=r("ExternalLinkIcon");return s(),c("div",null,[e("p",null,[t(a,{to:"/apidocs/"},{default:i(()=>[n("@line/bot-sdk")]),_:1}),n(" / "),t(a,{to:"/apidocs/modules.html"},{default:i(()=>[n("Exports")]),_:1}),n(" / MiddlewareConfig")]),f,_,e("ul",null,[e("li",null,[e("p",null,[t(a,{to:"/apidocs/interfaces/Config.html"},{default:i(()=>[u]),_:1})]),p])]),b,g,e("ul",null,[e("li",null,[t(a,{to:"/apidocs/interfaces/MiddlewareConfig.html#channelaccesstoken"},{default:i(()=>[n("channelAccessToken")]),_:1})]),e("li",null,[t(a,{to:"/apidocs/interfaces/MiddlewareConfig.html#channelsecret"},{default:i(()=>[n("channelSecret")]),_:1})])]),m,e("p",null,[t(a,{to:"/apidocs/interfaces/Config.html"},{default:i(()=>[n("Config")]),_:1}),n("."),t(a,{to:"/apidocs/interfaces/Config.html#channelaccesstoken"},{default:i(()=>[n("channelAccessToken")]),_:1})]),k,e("p",null,[e("a",x,[n("lib/types.ts:7"),t(o)])]),C,w,y,M,e("p",null,[t(a,{to:"/apidocs/interfaces/Config.html"},{default:i(()=>[n("Config")]),_:1}),n("."),t(a,{to:"/apidocs/interfaces/Config.html#channelsecret"},{default:i(()=>[n("channelSecret")]),_:1})]),v,e("p",null,[e("a",L,[n("lib/types.ts:17"),t(o)])])])}const I=d(h,[["render",T],["__file","MiddlewareConfig.html.vue"]]);export{I as default};

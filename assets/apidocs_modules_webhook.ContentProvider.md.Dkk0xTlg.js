import{_ as e,c as o,o as a,a2 as t}from"./chunks/framework.C6tTn57k.js";const u=JSON.parse('{"title":"Namespace: ContentProvider","description":"","frontmatter":{},"headers":[],"relativePath":"apidocs/modules/webhook.ContentProvider.md","filePath":"apidocs/modules/webhook.ContentProvider.md"}'),n={name:"apidocs/modules/webhook.ContentProvider.md"},r=t('<p><a href="./../README.html">@line/bot-sdk</a> / <a href="./../modules.html">Exports</a> / <a href="./webhook.html">webhook</a> / ContentProvider</p><h1 id="namespace-contentprovider" tabindex="-1">Namespace: ContentProvider <a class="header-anchor" href="#namespace-contentprovider" aria-label="Permalink to &quot;Namespace: ContentProvider&quot;">​</a></h1><p><a href="./webhook.html">webhook</a>.ContentProvider</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h3><ul><li><a href="./webhook.ContentProvider.html#typeenum">TypeEnum</a></li></ul><h2 id="type-aliases-1" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases-1" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="typeenum" tabindex="-1">TypeEnum <a class="header-anchor" href="#typeenum" aria-label="Permalink to &quot;TypeEnum&quot;">​</a></h3><p>Ƭ <strong>TypeEnum</strong>: <code>&quot;line&quot;</code> | <code>&quot;external&quot;</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/line/line-bot-sdk-nodejs/blob/66c9fc1/lib/webhook/model/contentProvider.ts#L32" target="_blank" rel="noreferrer">lib/webhook/model/contentProvider.ts:32</a></p>',11),i=[r];function s(l,d,h,c,p,m){return a(),o("div",null,i)}const f=e(n,[["render",s]]);export{u as __pageData,f as default};

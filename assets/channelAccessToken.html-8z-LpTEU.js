import{_ as d,r as c,o as i,c as r,a as e,d as s,w as a,b as t,e as o}from"./app-WnBvREUy.js";const h={},p=o('<h1 id="namespace-channelaccesstoken" tabindex="-1"><a class="header-anchor" href="#namespace-channelaccesstoken" aria-hidden="true">#</a> Namespace: channelAccessToken</h1><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h3>',3),f=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),g=o('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="channelaccesstokenkeyidsresponse" tabindex="-1"><a class="header-anchor" href="#channelaccesstokenkeyidsresponse" aria-hidden="true">#</a> ChannelAccessTokenKeyIdsResponse</h3><p>Ƭ <strong>ChannelAccessTokenKeyIdsResponse</strong>: <code>Object</code></p><p>Channel access token key IDs</p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>kids</code></td><td style="text-align:left;"><code>string</code>[]</td><td style="text-align:left;">Array of channel access token key IDs. <strong><code>See</code></strong> <a href="https://developers.line.biz/en/reference/messaging-api/#get-all-valid-channel-access-token-key-ids-v2-1">kids Documentation</a></td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',7),y={href:"https://github.com/line/line-bot-sdk-nodejs/blob/8cffd97/lib/channel-access-token/model/channelAccessTokenKeyIdsResponse.ts#L16",target:"_blank",rel:"noopener noreferrer"},k=o('<hr><h3 id="errorresponse" tabindex="-1"><a class="header-anchor" href="#errorresponse" aria-hidden="true">#</a> ErrorResponse</h3><p>Ƭ <strong>ErrorResponse</strong>: <code>Object</code></p><p>Error response of the Channel access token</p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>error?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Error summary</td></tr><tr><td style="text-align:left;"><code>errorDescription?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Details of the error. Not returned in certain situations.</td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',7),u={href:"https://github.com/line/line-bot-sdk-nodejs/blob/8cffd97/lib/channel-access-token/model/errorResponse.ts#L16",target:"_blank",rel:"noopener noreferrer"},b=o('<hr><h3 id="issuechannelaccesstokenresponse" tabindex="-1"><a class="header-anchor" href="#issuechannelaccesstokenresponse" aria-hidden="true">#</a> IssueChannelAccessTokenResponse</h3><p>Ƭ <strong>IssueChannelAccessTokenResponse</strong>: <code>Object</code></p><p>Issued channel access token</p><h4 id="type-declaration-2" tabindex="-1"><a class="header-anchor" href="#type-declaration-2" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel access token. <strong><code>See</code></strong> <a href="https://developers.line.biz/en/reference/messaging-api/#issue-channel-access-token-v2-1">accessToken Documentation</a></td></tr><tr><td style="text-align:left;"><code>expiresIn</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Amount of time in seconds from issue to expiration of the channel access token <strong><code>See</code></strong> <a href="https://developers.line.biz/en/reference/messaging-api/#issue-channel-access-token-v2-1">expiresIn Documentation</a></td></tr><tr><td style="text-align:left;"><code>keyId</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Unique key ID for identifying the channel access token. <strong><code>See</code></strong> <a href="https://developers.line.biz/en/reference/messaging-api/#issue-channel-access-token-v2-1">keyId Documentation</a></td></tr><tr><td style="text-align:left;"><code>tokenType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A token type. <strong><code>See</code></strong> <a href="https://developers.line.biz/en/reference/messaging-api/#issue-channel-access-token-v2-1">tokenType Documentation</a></td></tr></tbody></table><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4>',7),x={href:"https://github.com/line/line-bot-sdk-nodejs/blob/8cffd97/lib/channel-access-token/model/issueChannelAccessTokenResponse.ts#L16",target:"_blank",rel:"noopener noreferrer"},m=o('<hr><h3 id="issueshortlivedchannelaccesstokenresponse" tabindex="-1"><a class="header-anchor" href="#issueshortlivedchannelaccesstokenresponse" aria-hidden="true">#</a> IssueShortLivedChannelAccessTokenResponse</h3><p>Ƭ <strong>IssueShortLivedChannelAccessTokenResponse</strong>: <code>Object</code></p><p>Issued short-lived channel access token</p><h4 id="type-declaration-3" tabindex="-1"><a class="header-anchor" href="#type-declaration-3" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A short-lived channel access token. Valid for 30 days. Note: Channel access tokens cannot be refreshed. <strong><code>See</code></strong> <a href="https://developers.line.biz/en/reference/messaging-api/#issue-shortlived-channel-access-token">accessToken Documentation</a></td></tr><tr><td style="text-align:left;"><code>expiresIn</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Time until channel access token expires in seconds from time the token is issued. <strong><code>See</code></strong> <a href="https://developers.line.biz/en/reference/messaging-api/#issue-shortlived-channel-access-token">expiresIn Documentation</a></td></tr><tr><td style="text-align:left;"><code>tokenType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Token type. The value is always <code>Bearer</code>. <strong><code>See</code></strong> <a href="https://developers.line.biz/en/reference/messaging-api/#issue-shortlived-channel-access-token">tokenType Documentation</a></td></tr></tbody></table><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4>',7),T={href:"https://github.com/line/line-bot-sdk-nodejs/blob/8cffd97/lib/channel-access-token/model/issueShortLivedChannelAccessTokenResponse.ts#L16",target:"_blank",rel:"noopener noreferrer"},_=o('<hr><h3 id="issuestatelesschannelaccesstokenresponse" tabindex="-1"><a class="header-anchor" href="#issuestatelesschannelaccesstokenresponse" aria-hidden="true">#</a> IssueStatelessChannelAccessTokenResponse</h3><p>Ƭ <strong>IssueStatelessChannelAccessTokenResponse</strong>: <code>Object</code></p><p>Issued stateless channel access token</p><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A stateless channel access token. The token is an opaque string which means its format is an implementation detail and the consumer of this token should never try to use the data parsed from the token. <strong><code>See</code></strong> <a href="https://developers.line.biz/en/reference/messaging-api/#issue-stateless-channel-access-token">accessToken Documentation</a></td></tr><tr><td style="text-align:left;"><code>expiresIn</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Duration in seconds after which the issued access token expires <strong><code>See</code></strong> <a href="https://developers.line.biz/en/reference/messaging-api/#issue-stateless-channel-access-token">expiresIn Documentation</a></td></tr><tr><td style="text-align:left;"><code>tokenType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Token type. The value is always <code>Bearer</code>. <strong><code>See</code></strong> <a href="https://developers.line.biz/en/reference/messaging-api/#issue-stateless-channel-access-token">tokenType Documentation</a></td></tr></tbody></table><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',7),A={href:"https://github.com/line/line-bot-sdk-nodejs/blob/8cffd97/lib/channel-access-token/model/issueStatelessChannelAccessTokenResponse.ts#L16",target:"_blank",rel:"noopener noreferrer"},v=o('<hr><h3 id="verifychannelaccesstokenresponse" tabindex="-1"><a class="header-anchor" href="#verifychannelaccesstokenresponse" aria-hidden="true">#</a> VerifyChannelAccessTokenResponse</h3><p>Ƭ <strong>VerifyChannelAccessTokenResponse</strong>: <code>Object</code></p><p>Verification result</p><h4 id="type-declaration-5" tabindex="-1"><a class="header-anchor" href="#type-declaration-5" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>clientId</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The channel ID for which the channel access token was issued.</td></tr><tr><td style="text-align:left;"><code>expiresIn</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Number of seconds before the channel access token expires.</td></tr><tr><td style="text-align:left;"><code>scope?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Permissions granted to the channel access token.</td></tr></tbody></table><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4>',7),C={href:"https://github.com/line/line-bot-sdk-nodejs/blob/8cffd97/lib/channel-access-token/model/verifyChannelAccessTokenResponse.ts#L16",target:"_blank",rel:"noopener noreferrer"};function I(R,D){const n=c("RouterLink"),l=c("ExternalLinkIcon");return i(),r("div",null,[e("p",null,[s(n,{to:"/apidocs/"},{default:a(()=>[t("@line/bot-sdk")]),_:1}),t(" / "),s(n,{to:"/apidocs/modules.html"},{default:a(()=>[t("Exports")]),_:1}),t(" / channelAccessToken")]),p,e("ul",null,[e("li",null,[s(n,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html"},{default:a(()=>[t("ChannelAccessTokenClient")]),_:1})])]),f,e("ul",null,[e("li",null,[s(n,{to:"/apidocs/modules/channelAccessToken.html#channelaccesstokenkeyidsresponse"},{default:a(()=>[t("ChannelAccessTokenKeyIdsResponse")]),_:1})]),e("li",null,[s(n,{to:"/apidocs/modules/channelAccessToken.html#errorresponse"},{default:a(()=>[t("ErrorResponse")]),_:1})]),e("li",null,[s(n,{to:"/apidocs/modules/channelAccessToken.html#issuechannelaccesstokenresponse"},{default:a(()=>[t("IssueChannelAccessTokenResponse")]),_:1})]),e("li",null,[s(n,{to:"/apidocs/modules/channelAccessToken.html#issueshortlivedchannelaccesstokenresponse"},{default:a(()=>[t("IssueShortLivedChannelAccessTokenResponse")]),_:1})]),e("li",null,[s(n,{to:"/apidocs/modules/channelAccessToken.html#issuestatelesschannelaccesstokenresponse"},{default:a(()=>[t("IssueStatelessChannelAccessTokenResponse")]),_:1})]),e("li",null,[s(n,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:a(()=>[t("VerifyChannelAccessTokenResponse")]),_:1})])]),g,e("p",null,[e("a",y,[t("lib/channel-access-token/model/channelAccessTokenKeyIdsResponse.ts:16"),s(l)])]),k,e("p",null,[e("a",u,[t("lib/channel-access-token/model/errorResponse.ts:16"),s(l)])]),b,e("p",null,[e("a",x,[t("lib/channel-access-token/model/issueChannelAccessTokenResponse.ts:16"),s(l)])]),m,e("p",null,[e("a",T,[t("lib/channel-access-token/model/issueShortLivedChannelAccessTokenResponse.ts:16"),s(l)])]),_,e("p",null,[e("a",A,[t("lib/channel-access-token/model/issueStatelessChannelAccessTokenResponse.ts:16"),s(l)])]),v,e("p",null,[e("a",C,[t("lib/channel-access-token/model/verifyChannelAccessTokenResponse.ts:16"),s(l)])])])}const L=d(h,[["render",I],["__file","channelAccessToken.html.vue"]]);export{L as default};

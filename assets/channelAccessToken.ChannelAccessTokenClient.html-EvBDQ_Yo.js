import{_ as d,r as c,o as i,c as h,a as e,d as n,w as l,b as t,e as a}from"./app-d6ODzTmM.js";const r={},u=e("h1",{id:"class-channelaccesstokenclient",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-channelaccesstokenclient","aria-hidden":"true"},"#"),t(" Class: ChannelAccessTokenClient")],-1),_=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),f=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),p=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),k=e("h2",{id:"constructors-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors-1","aria-hidden":"true"},"#"),t(" Constructors")],-1),y=e("h3",{id:"constructor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructor","aria-hidden":"true"},"#"),t(" constructor")],-1),g=e("strong",null,"new ChannelAccessTokenClient",-1),b=e("code",null,"config",-1),T=e("code",null,"ChannelAccessTokenClient",-1),m=a('<h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>config</code></td><td style="text-align:left;"><code>httpClientConfig</code></td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',3),x=e("code",null,"ChannelAccessTokenClient",-1),C=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),A={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/channel-access-token/api/channelAccessTokenClient.ts#L40",target:"_blank",rel:"noopener noreferrer"},v=e("h2",{id:"methods-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods-1","aria-hidden":"true"},"#"),t(" Methods")],-1),I=e("h3",{id:"getsallvalidchannelaccesstokenkeyids",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getsallvalidchannelaccesstokenkeyids","aria-hidden":"true"},"#"),t(" getsAllValidChannelAccessTokenKeyIds")],-1),R=e("strong",null,"getsAllValidChannelAccessTokenKeyIds",-1),D=e("code",null,"clientAssertionType",-1),P=e("code",null,"clientAssertion",-1),w=e("code",null,"Promise",-1),S=e("code",null,"ChannelAccessTokenKeyIdsResponse",-1),j=a('<p>Gets all valid channel access token key IDs.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>clientAssertionType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>urn:ietf:params:oauth:client-assertion-type:jwt-bearer</code></td></tr><tr><td style="text-align:left;"><code>clientAssertion</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A JSON Web Token (JWT) (opens new window)the client needs to create and sign with the private key.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4>',4),B=e("code",null,"Promise",-1),L=e("code",null,"ChannelAccessTokenKeyIdsResponse",-1),N=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),J=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#get-all-valid-channel-access-token-key-ids-v2-1"}," Documentation")],-1),W=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),V={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/channel-access-token/api/channelAccessTokenClient.ts#L70",target:"_blank",rel:"noopener noreferrer"},z=e("hr",null,null,-1),K=e("h3",{id:"issuechanneltoken",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#issuechanneltoken","aria-hidden":"true"},"#"),t(" issueChannelToken")],-1),M=e("strong",null,"issueChannelToken",-1),E=e("code",null,"grantType?",-1),O=e("code",null,"clientId?",-1),G=e("code",null,"clientSecret?",-1),U=e("code",null,"Promise",-1),Y=e("code",null,"IssueShortLivedChannelAccessTokenResponse",-1),q=a('<p>Issue short-lived channel access token</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>grantType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>client_credentials</code></td></tr><tr><td style="text-align:left;"><code>clientId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel ID.</td></tr><tr><td style="text-align:left;"><code>clientSecret?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel secret.</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4>',4),F=e("code",null,"Promise",-1),H=e("code",null,"IssueShortLivedChannelAccessTokenResponse",-1),Q=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),X=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#issue-shortlived-channel-access-token"}," Documentation")],-1),Z=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),$={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/channel-access-token/api/channelAccessTokenClient.ts#L93",target:"_blank",rel:"noopener noreferrer"},ee=e("hr",null,null,-1),te=e("h3",{id:"issuechanneltokenbyjwt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#issuechanneltokenbyjwt","aria-hidden":"true"},"#"),t(" issueChannelTokenByJWT")],-1),ne=e("strong",null,"issueChannelTokenByJWT",-1),se=e("code",null,"grantType?",-1),le=e("code",null,"clientAssertionType?",-1),oe=e("code",null,"clientAssertion?",-1),ae=e("code",null,"Promise",-1),ce=e("code",null,"IssueChannelAccessTokenResponse",-1),de=a('<p>Issues a channel access token that allows you to specify a desired expiration date. This method lets you use JWT assertion for authentication.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>grantType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">client_credentials</td></tr><tr><td style="text-align:left;"><code>clientAssertionType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">urn:ietf:params:oauth:client-assertion-type:jwt-bearer</td></tr><tr><td style="text-align:left;"><code>clientAssertion?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A JSON Web Token the client needs to create and sign with the private key of the Assertion Signing Key.</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4>',4),ie=e("code",null,"Promise",-1),he=e("code",null,"IssueChannelAccessTokenResponse",-1),re=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),ue=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#issue-channel-access-token-v2-1"}," Documentation")],-1),_e=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),fe={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/channel-access-token/api/channelAccessTokenClient.ts#L124",target:"_blank",rel:"noopener noreferrer"},pe=e("hr",null,null,-1),ke=e("h3",{id:"issuestatelesschanneltoken",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#issuestatelesschanneltoken","aria-hidden":"true"},"#"),t(" issueStatelessChannelToken")],-1),ye=e("strong",null,"issueStatelessChannelToken",-1),ge=e("code",null,"grantType?",-1),be=e("code",null,"clientAssertionType?",-1),Te=e("code",null,"clientAssertion?",-1),me=e("code",null,"clientId?",-1),xe=e("code",null,"clientSecret?",-1),Ce=e("code",null,"Promise",-1),Ae=e("code",null,"IssueStatelessChannelAccessTokenResponse",-1),ve=a('<p>Issues a new stateless channel access token, which doesn&#39;t have max active token limit unlike the other token types. The newly issued token is only valid for 15 minutes but can not be revoked until it naturally expires.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>grantType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>client_credentials</code></td></tr><tr><td style="text-align:left;"><code>clientAssertionType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">URL-encoded value of <code>urn:ietf:params:oauth:client-assertion-type:jwt-bearer</code></td></tr><tr><td style="text-align:left;"><code>clientAssertion?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A JSON Web Token the client needs to create and sign with the private key of the Assertion Signing Key.</td></tr><tr><td style="text-align:left;"><code>clientId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel ID.</td></tr><tr><td style="text-align:left;"><code>clientSecret?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel secret.</td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4>',4),Ie=e("code",null,"Promise",-1),Re=e("code",null,"IssueStatelessChannelAccessTokenResponse",-1),De=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),Pe=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#issue-stateless-channel-access-token"}," Documentation")],-1),we=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),Se={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/channel-access-token/api/channelAccessTokenClient.ts#L156",target:"_blank",rel:"noopener noreferrer"},je=e("hr",null,null,-1),Be=e("h3",{id:"revokechanneltoken",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#revokechanneltoken","aria-hidden":"true"},"#"),t(" revokeChannelToken")],-1),Le=e("strong",null,"revokeChannelToken",-1),Ne=e("code",null,"accessToken?",-1),Je=e("code",null,"Promise",-1),We=e("code",null,"MessageAPIResponseBase",-1),Ve=a('<p>Revoke short-lived or long-lived channel access token</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel access token</td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4>',4),ze=e("code",null,"Promise",-1),Ke=e("code",null,"MessageAPIResponseBase",-1),Me=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),Ee=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#revoke-longlived-or-shortlived-channel-access-token"}," Documentation")],-1),Oe=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ge={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/channel-access-token/api/channelAccessTokenClient.ts#L189",target:"_blank",rel:"noopener noreferrer"},Ue=e("hr",null,null,-1),Ye=e("h3",{id:"revokechanneltokenbyjwt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#revokechanneltokenbyjwt","aria-hidden":"true"},"#"),t(" revokeChannelTokenByJWT")],-1),qe=e("strong",null,"revokeChannelTokenByJWT",-1),Fe=e("code",null,"clientId?",-1),He=e("code",null,"clientSecret?",-1),Qe=e("code",null,"accessToken?",-1),Xe=e("code",null,"Promise",-1),Ze=e("code",null,"MessageAPIResponseBase",-1),$e=a('<p>Revoke channel access token v2.1</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>clientId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel ID</td></tr><tr><td style="text-align:left;"><code>clientSecret?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel Secret</td></tr><tr><td style="text-align:left;"><code>accessToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel access token</td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4>',4),et=e("code",null,"Promise",-1),tt=e("code",null,"MessageAPIResponseBase",-1),nt=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),st=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#revoke-channel-access-token-v2-1"}," Documentation")],-1),lt=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),ot={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/channel-access-token/api/channelAccessTokenClient.ts#L212",target:"_blank",rel:"noopener noreferrer"},at=e("hr",null,null,-1),ct=e("h3",{id:"verifychanneltoken",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#verifychanneltoken","aria-hidden":"true"},"#"),t(" verifyChannelToken")],-1),dt=e("strong",null,"verifyChannelToken",-1),it=e("code",null,"accessToken?",-1),ht=e("code",null,"Promise",-1),rt=e("code",null,"VerifyChannelAccessTokenResponse",-1),ut=a('<p>Verify the validity of short-lived and long-lived channel access tokens</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A short-lived or long-lived channel access token.</td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4>',4),_t=e("code",null,"Promise",-1),ft=e("code",null,"VerifyChannelAccessTokenResponse",-1),pt=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),kt=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#verfiy-channel-access-token"}," Documentation")],-1),yt=e("h4",{id:"defined-in-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-7","aria-hidden":"true"},"#"),t(" Defined in")],-1),gt={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/channel-access-token/api/channelAccessTokenClient.ts#L237",target:"_blank",rel:"noopener noreferrer"},bt=e("hr",null,null,-1),Tt=e("h3",{id:"verifychanneltokenbyjwt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#verifychanneltokenbyjwt","aria-hidden":"true"},"#"),t(" verifyChannelTokenByJWT")],-1),mt=e("strong",null,"verifyChannelTokenByJWT",-1),xt=e("code",null,"accessToken",-1),Ct=e("code",null,"Promise",-1),At=e("code",null,"VerifyChannelAccessTokenResponse",-1),vt=a('<p>You can verify whether a Channel access token with a user-specified expiration (Channel Access Token v2.1) is valid.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel access token with a user-specified expiration (Channel Access Token v2.1).</td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4>',4),It=e("code",null,"Promise",-1),Rt=e("code",null,"VerifyChannelAccessTokenResponse",-1),Dt=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),Pt=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#verfiy-channel-access-token-v2-1"}," Documentation")],-1),wt=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),St={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/channel-access-token/api/channelAccessTokenClient.ts#L261",target:"_blank",rel:"noopener noreferrer"};function jt(Bt,Lt){const s=c("RouterLink"),o=c("ExternalLinkIcon");return i(),h("div",null,[e("p",null,[n(s,{to:"/apidocs/"},{default:l(()=>[t("@line/bot-sdk")]),_:1}),t(" / "),n(s,{to:"/apidocs/modules.html"},{default:l(()=>[t("Exports")]),_:1}),t(" / "),n(s,{to:"/apidocs/modules/channelAccessToken.html"},{default:l(()=>[t("channelAccessToken")]),_:1}),t(" / ChannelAccessTokenClient")]),u,e("p",null,[n(s,{to:"/apidocs/modules/channelAccessToken.html"},{default:l(()=>[t("channelAccessToken")]),_:1}),t(".ChannelAccessTokenClient")]),_,f,e("ul",null,[e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#constructor"},{default:l(()=>[t("constructor")]),_:1})])]),p,e("ul",null,[e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#getsallvalidchannelaccesstokenkeyids"},{default:l(()=>[t("getsAllValidChannelAccessTokenKeyIds")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#issuechanneltoken"},{default:l(()=>[t("issueChannelToken")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#issuechanneltokenbyjwt"},{default:l(()=>[t("issueChannelTokenByJWT")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#issuestatelesschanneltoken"},{default:l(()=>[t("issueStatelessChannelToken")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#revokechanneltoken"},{default:l(()=>[t("revokeChannelToken")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#revokechanneltokenbyjwt"},{default:l(()=>[t("revokeChannelTokenByJWT")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#verifychanneltoken"},{default:l(()=>[t("verifyChannelToken")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#verifychanneltokenbyjwt"},{default:l(()=>[t("verifyChannelTokenByJWT")]),_:1})])]),k,y,e("p",null,[t("• "),g,t("("),b,t("): "),n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html"},{default:l(()=>[T]),_:1})]),m,e("p",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html"},{default:l(()=>[x]),_:1})]),C,e("p",null,[e("a",A,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:40"),n(o)])]),v,I,e("p",null,[t("▸ "),R,t("("),D,t(", "),P,t("): "),w,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#channelaccesstokenkeyidsresponse"},{default:l(()=>[S]),_:1}),t(">")]),j,e("p",null,[B,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#channelaccesstokenkeyidsresponse"},{default:l(()=>[L]),_:1}),t(">")]),N,J,W,e("p",null,[e("a",V,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:70"),n(o)])]),z,K,e("p",null,[t("▸ "),M,t("("),E,t(", "),O,t(", "),G,t("): "),U,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issueshortlivedchannelaccesstokenresponse"},{default:l(()=>[Y]),_:1}),t(">")]),q,e("p",null,[F,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issueshortlivedchannelaccesstokenresponse"},{default:l(()=>[H]),_:1}),t(">")]),Q,X,Z,e("p",null,[e("a",$,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:93"),n(o)])]),ee,te,e("p",null,[t("▸ "),ne,t("("),se,t(", "),le,t(", "),oe,t("): "),ae,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuechannelaccesstokenresponse"},{default:l(()=>[ce]),_:1}),t(">")]),de,e("p",null,[ie,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuechannelaccesstokenresponse"},{default:l(()=>[he]),_:1}),t(">")]),re,ue,_e,e("p",null,[e("a",fe,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:124"),n(o)])]),pe,ke,e("p",null,[t("▸ "),ye,t("("),ge,t(", "),be,t(", "),Te,t(", "),me,t(", "),xe,t("): "),Ce,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuestatelesschannelaccesstokenresponse"},{default:l(()=>[Ae]),_:1}),t(">")]),ve,e("p",null,[Ie,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuestatelesschannelaccesstokenresponse"},{default:l(()=>[Re]),_:1}),t(">")]),De,Pe,we,e("p",null,[e("a",Se,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:156"),n(o)])]),je,Be,e("p",null,[t("▸ "),Le,t("("),Ne,t("): "),Je,t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[We]),_:1}),t(">")]),Ve,e("p",null,[ze,t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[Ke]),_:1}),t(">")]),Me,Ee,Oe,e("p",null,[e("a",Ge,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:189"),n(o)])]),Ue,Ye,e("p",null,[t("▸ "),qe,t("("),Fe,t(", "),He,t(", "),Qe,t("): "),Xe,t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[Ze]),_:1}),t(">")]),$e,e("p",null,[et,t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[tt]),_:1}),t(">")]),nt,st,lt,e("p",null,[e("a",ot,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:212"),n(o)])]),at,ct,e("p",null,[t("▸ "),dt,t("("),it,t("): "),ht,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[rt]),_:1}),t(">")]),ut,e("p",null,[_t,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[ft]),_:1}),t(">")]),pt,kt,yt,e("p",null,[e("a",gt,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:237"),n(o)])]),bt,Tt,e("p",null,[t("▸ "),mt,t("("),xt,t("): "),Ct,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[At]),_:1}),t(">")]),vt,e("p",null,[It,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[Rt]),_:1}),t(">")]),Dt,Pt,wt,e("p",null,[e("a",St,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:261"),n(o)])])])}const Jt=d(r,[["render",jt],["__file","channelAccessToken.ChannelAccessTokenClient.html.vue"]]);export{Jt as default};

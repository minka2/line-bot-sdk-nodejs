import{_ as a,r as s,o as f,c as r,a as e,d as l,w as i,b as t,e as d}from"./app-d6ODzTmM.js";const c={},h=d('<h1 id="namespace-liff" tabindex="-1"><a class="header-anchor" href="#namespace-liff" aria-hidden="true">#</a> Namespace: liff</h1><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="namespaces" tabindex="-1"><a class="header-anchor" href="#namespaces" aria-hidden="true">#</a> Namespaces</h3>',3),p=e("h3",{id:"classes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),t(" Classes")],-1),u=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),_=d('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="addliffapprequest" tabindex="-1"><a class="header-anchor" href="#addliffapprequest" aria-hidden="true">#</a> AddLiffAppRequest</h3><p>Ƭ <strong>AddLiffAppRequest</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4>',4),m=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),g=e("td",{style:{"text-align":"left"}},[e("code",null,"botPrompt?")],-1),b={style:{"text-align":"left"}},y=e("code",null,"LiffBotPrompt",-1),x=e("td",{style:{"text-align":"left"}},[e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"botPrompt Documentation")],-1),L=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"description?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[t(`Name of the LIFF app. The LIFF app name can't include "LINE" or similar strings, or inappropriate strings. `),e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"description Documentation")])],-1),A=e("td",{style:{"text-align":"left"}},[e("code",null,"features?")],-1),v={style:{"text-align":"left"}},F=e("code",null,"LiffFeatures",-1),I=e("td",{style:{"text-align":"left"}},[e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"features Documentation")],-1),q=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"permanentLinkPattern?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[t("How additional information in LIFF URLs is handled. Specify "),e("code",null,"concat"),t(". "),e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"permanentLinkPattern Documentation")])],-1),w=e("td",{style:{"text-align":"left"}},[e("code",null,"scope?")],-1),k={style:{"text-align":"left"}},R=e("code",null,"LiffScope",-1),D=e("td",{style:{"text-align":"left"}},[e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"scope Documentation")],-1),T=e("td",{style:{"text-align":"left"}},[e("code",null,"view")],-1),S={style:{"text-align":"left"}},P=e("code",null,"LiffView",-1),N=e("td",{style:{"text-align":"left"}},[e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"view Documentation")],-1),j=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),O={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/liff/model/addLiffAppRequest.ts#L18",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/liff/model/addLiffAppRequest.ts#L53",target:"_blank",rel:"noopener noreferrer"},z=d('<hr><h3 id="addliffappresponse" tabindex="-1"><a class="header-anchor" href="#addliffappresponse" aria-hidden="true">#</a> AddLiffAppResponse</h3><p>Ƭ <strong>AddLiffAppResponse</strong>: <code>Object</code></p><p>LIFF server API LIFF Server API.</p><p>The version of the OpenAPI document: 1.0.0</p><p>NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech). https://openapi-generator.tech Do not edit the class manually.</p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>liffId</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',9),E={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/liff/model/addLiffAppResponse.ts#L13",target:"_blank",rel:"noopener noreferrer"},U=e("hr",null,null,-1),B=e("h3",{id:"getallliffappsresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getallliffappsresponse","aria-hidden":"true"},"#"),t(" GetAllLiffAppsResponse")],-1),C=e("p",null,[t("Ƭ "),e("strong",null,"GetAllLiffAppsResponse"),t(": "),e("code",null,"Object")],-1),G=e("h4",{id:"type-declaration-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-2","aria-hidden":"true"},"#"),t(" Type declaration")],-1),H=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),M=e("td",{style:{"text-align":"left"}},[e("code",null,"apps?")],-1),K={style:{"text-align":"left"}},W=e("code",null,"LiffApp",-1),J=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),Q={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/liff/model/getAllLiffAppsResponse.ts#L15",target:"_blank",rel:"noopener noreferrer"},X=e("hr",null,null,-1),Y=e("h3",{id:"liffapp",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#liffapp","aria-hidden":"true"},"#"),t(" LiffApp")],-1),Z=e("p",null,[t("Ƭ "),e("strong",null,"LiffApp"),t(": "),e("code",null,"Object")],-1),$=e("h4",{id:"type-declaration-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-3","aria-hidden":"true"},"#"),t(" Type declaration")],-1),ee=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),te=e("td",{style:{"text-align":"left"}},[e("code",null,"botPrompt?")],-1),le={style:{"text-align":"left"}},ne=e("code",null,"LiffBotPrompt",-1),ie=e("td",{style:{"text-align":"left"}},null,-1),oe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"description?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"Name of the LIFF app")],-1),de=e("td",{style:{"text-align":"left"}},[e("code",null,"features?")],-1),se={style:{"text-align":"left"}},ae=e("code",null,"LiffFeatures",-1),fe=e("td",{style:{"text-align":"left"}},null,-1),re=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"liffId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"LIFF app ID")],-1),ce=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"permanentLinkPattern?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"How additional information in LIFF URLs is handled. concat is returned.")],-1),he=e("td",{style:{"text-align":"left"}},[e("code",null,"scope?")],-1),pe={style:{"text-align":"left"}},ue=e("code",null,"LiffScope",-1),_e=e("td",{style:{"text-align":"left"}},null,-1),me=e("td",{style:{"text-align":"left"}},[e("code",null,"view?")],-1),ge={style:{"text-align":"left"}},be=e("code",null,"LiffView",-1),ye=e("td",{style:{"text-align":"left"}},null,-1),xe=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),Le={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/liff/model/liffApp.ts#L18",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/liff/model/liffApp.ts#L45",target:"_blank",rel:"noopener noreferrer"},ve=d('<hr><h3 id="liffbotprompt" tabindex="-1"><a class="header-anchor" href="#liffbotprompt" aria-hidden="true">#</a> LiffBotPrompt</h3><p>Ƭ <strong>LiffBotPrompt</strong>: <code>&quot;normal&quot;</code> | <code>&quot;aggressive&quot;</code> | <code>&quot;none&quot;</code></p><p>Specify the setting for bot link feature with one of the following values: <code>normal</code>: Display the option to add the LINE Official Account as a friend in the channel consent screen. <code>aggressive</code>: Display a screen with the option to add the LINE Official Account as a friend after the channel consent screen. <code>none</code>: Don&#39;t display the option to add the LINE Official Account as a friend. The default value is none.</p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4>',5),Fe={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/liff/model/liffBotPrompt.ts#L17",target:"_blank",rel:"noopener noreferrer"},Ie=d('<hr><h3 id="lifffeatures" tabindex="-1"><a class="header-anchor" href="#lifffeatures" aria-hidden="true">#</a> LiffFeatures</h3><p>Ƭ <strong>LiffFeatures</strong>: <code>Object</code></p><p>LIFF server API LIFF Server API.</p><p>The version of the OpenAPI document: 1.0.0</p><p>NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech). https://openapi-generator.tech Do not edit the class manually.</p><h4 id="type-declaration-4" tabindex="-1"><a class="header-anchor" href="#type-declaration-4" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ble?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code> if the LIFF app supports Bluetooth® Low Energy for LINE Things. <code>false</code> otherwise.</td></tr><tr><td style="text-align:left;"><code>qrCode?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code> to use the 2D code reader in the LIFF app. false otherwise. The default value is <code>false</code>.</td></tr></tbody></table><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4>',9),qe={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/liff/model/liffFeatures.ts#L13",target:"_blank",rel:"noopener noreferrer"},we=d('<hr><h3 id="liffscope" tabindex="-1"><a class="header-anchor" href="#liffscope" aria-hidden="true">#</a> LiffScope</h3><p>Ƭ <strong>LiffScope</strong>: <code>&quot;openid&quot;</code> | <code>&quot;email&quot;</code> | <code>&quot;profile&quot;</code> | <code>&quot;chat_message.write&quot;</code></p><p>Array of scopes required for some LIFF SDK methods to function. The default value is <code>[\\&quot;profile\\&quot;, \\&quot;chat_message.write\\&quot;]</code>.</p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4>',5),ke={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/liff/model/liffScope.ts#L17",target:"_blank",rel:"noopener noreferrer"},Re=d('<hr><h3 id="liffview" tabindex="-1"><a class="header-anchor" href="#liffview" aria-hidden="true">#</a> LiffView</h3><p>Ƭ <strong>LiffView</strong>: <code>Object</code></p><p>LIFF server API LIFF Server API.</p><p>The version of the OpenAPI document: 1.0.0</p><p>NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech). https://openapi-generator.tech Do not edit the class manually.</p><h4 id="type-declaration-5" tabindex="-1"><a class="header-anchor" href="#type-declaration-5" aria-hidden="true">#</a> Type declaration</h4>',7),De=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Te=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"moduleMode?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},[e("code",null,"true"),t(" to use the LIFF app in modular mode. When in modular mode, the action button in the header is not displayed. "),e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"moduleMode Documentation")])],-1),Se=e("td",{style:{"text-align":"left"}},[e("code",null,"type")],-1),Pe={style:{"text-align":"left"}},Ne=e("code",null,"TypeEnum",-1),je=e("td",{style:{"text-align":"left"}},[t("Size of the LIFF app view. Specify one of these values: - compact - tall - full "),e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"type Documentation")],-1),Oe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"url")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[t("Endpoint URL. This is the URL of the web app that implements the LIFF app (e.g. https://example.com). Used when the LIFF app is launched using the LIFF URL. The URL scheme must be https. URL fragments (#URL-fragment) can't be specified. "),e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"url Documentation")])],-1),Ve=e("h4",{id:"defined-in-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-7","aria-hidden":"true"},"#"),t(" Defined in")],-1),ze={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/liff/model/liffView.ts#L13",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/liff/model/liffView.ts#L34",target:"_blank",rel:"noopener noreferrer"},Ue=e("hr",null,null,-1),Be=e("h3",{id:"updateliffapprequest",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#updateliffapprequest","aria-hidden":"true"},"#"),t(" UpdateLiffAppRequest")],-1),Ce=e("p",null,[t("Ƭ "),e("strong",null,"UpdateLiffAppRequest"),t(": "),e("code",null,"Object")],-1),Ge=e("h4",{id:"type-declaration-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-6","aria-hidden":"true"},"#"),t(" Type declaration")],-1),He=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Me=e("td",{style:{"text-align":"left"}},[e("code",null,"botPrompt?")],-1),Ke={style:{"text-align":"left"}},We=e("code",null,"LiffBotPrompt",-1),Je=e("td",{style:{"text-align":"left"}},[e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"botPrompt Documentation")],-1),Qe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"description?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[t(`Name of the LIFF app. The LIFF app name can't include "LINE" or similar strings, or inappropriate strings. `),e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"description Documentation")])],-1),Xe=e("td",{style:{"text-align":"left"}},[e("code",null,"features?")],-1),Ye={style:{"text-align":"left"}},Ze=e("code",null,"LiffFeatures",-1),$e=e("td",{style:{"text-align":"left"}},[e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"features Documentation")],-1),et=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"permanentLinkPattern?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[t("How additional information in LIFF URLs is handled. Specify "),e("code",null,"concat"),t(". "),e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"permanentLinkPattern Documentation")])],-1),tt=e("td",{style:{"text-align":"left"}},[e("code",null,"scope?")],-1),lt={style:{"text-align":"left"}},nt=e("code",null,"LiffScope",-1),it=e("td",{style:{"text-align":"left"}},[e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"scope Documentation")],-1),ot=e("td",{style:{"text-align":"left"}},[e("code",null,"view?")],-1),dt={style:{"text-align":"left"}},st=e("code",null,"LiffView",-1),at=e("td",{style:{"text-align":"left"}},[e("strong",null,[e("code",null,"See")]),t(),e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"},"view Documentation")],-1),ft=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),rt={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/liff/model/updateLiffAppRequest.ts#L18",target:"_blank",rel:"noopener noreferrer"},ct={href:"https://github.com/line/line-bot-sdk-nodejs/blob/18dc03e/lib/liff/model/updateLiffAppRequest.ts#L53",target:"_blank",rel:"noopener noreferrer"};function ht(pt,ut){const n=s("RouterLink"),o=s("ExternalLinkIcon");return f(),r("div",null,[e("p",null,[l(n,{to:"/apidocs/"},{default:i(()=>[t("@line/bot-sdk")]),_:1}),t(" / "),l(n,{to:"/apidocs/modules.html"},{default:i(()=>[t("Exports")]),_:1}),t(" / liff")]),h,e("ul",null,[e("li",null,[l(n,{to:"/apidocs/modules/liff.AddLiffAppRequest.html"},{default:i(()=>[t("AddLiffAppRequest")]),_:1})]),e("li",null,[l(n,{to:"/apidocs/modules/liff.LiffApp.html"},{default:i(()=>[t("LiffApp")]),_:1})]),e("li",null,[l(n,{to:"/apidocs/modules/liff.LiffView.html"},{default:i(()=>[t("LiffView")]),_:1})]),e("li",null,[l(n,{to:"/apidocs/modules/liff.UpdateLiffAppRequest.html"},{default:i(()=>[t("UpdateLiffAppRequest")]),_:1})])]),p,e("ul",null,[e("li",null,[l(n,{to:"/apidocs/classes/liff.LiffClient.html"},{default:i(()=>[t("LiffClient")]),_:1})])]),u,e("ul",null,[e("li",null,[l(n,{to:"/apidocs/modules/liff.html#addliffapprequest"},{default:i(()=>[t("AddLiffAppRequest")]),_:1})]),e("li",null,[l(n,{to:"/apidocs/modules/liff.html#addliffappresponse"},{default:i(()=>[t("AddLiffAppResponse")]),_:1})]),e("li",null,[l(n,{to:"/apidocs/modules/liff.html#getallliffappsresponse"},{default:i(()=>[t("GetAllLiffAppsResponse")]),_:1})]),e("li",null,[l(n,{to:"/apidocs/modules/liff.html#liffapp"},{default:i(()=>[t("LiffApp")]),_:1})]),e("li",null,[l(n,{to:"/apidocs/modules/liff.html#liffbotprompt"},{default:i(()=>[t("LiffBotPrompt")]),_:1})]),e("li",null,[l(n,{to:"/apidocs/modules/liff.html#lifffeatures"},{default:i(()=>[t("LiffFeatures")]),_:1})]),e("li",null,[l(n,{to:"/apidocs/modules/liff.html#liffscope"},{default:i(()=>[t("LiffScope")]),_:1})]),e("li",null,[l(n,{to:"/apidocs/modules/liff.html#liffview"},{default:i(()=>[t("LiffView")]),_:1})]),e("li",null,[l(n,{to:"/apidocs/modules/liff.html#updateliffapprequest"},{default:i(()=>[t("UpdateLiffAppRequest")]),_:1})])]),_,e("table",null,[m,e("tbody",null,[e("tr",null,[g,e("td",b,[l(n,{to:"/apidocs/modules/liff.html#liffbotprompt"},{default:i(()=>[y]),_:1})]),x]),L,e("tr",null,[A,e("td",v,[l(n,{to:"/apidocs/modules/liff.html#lifffeatures"},{default:i(()=>[F]),_:1})]),I]),q,e("tr",null,[w,e("td",k,[l(n,{to:"/apidocs/modules/liff.html#liffscope"},{default:i(()=>[R]),_:1}),t("[]")]),D]),e("tr",null,[T,e("td",S,[l(n,{to:"/apidocs/modules/liff.html#liffview"},{default:i(()=>[P]),_:1})]),N])])]),j,e("p",null,[e("a",O,[t("lib/liff/model/addLiffAppRequest.ts:18"),l(o)])]),e("p",null,[e("a",V,[t("lib/liff/model/addLiffAppRequest.ts:53"),l(o)])]),z,e("p",null,[e("a",E,[t("lib/liff/model/addLiffAppResponse.ts:13"),l(o)])]),U,B,C,G,e("table",null,[H,e("tbody",null,[e("tr",null,[M,e("td",K,[l(n,{to:"/apidocs/modules/liff.html#liffapp"},{default:i(()=>[W]),_:1}),t("[]")])])])]),J,e("p",null,[e("a",Q,[t("lib/liff/model/getAllLiffAppsResponse.ts:15"),l(o)])]),X,Y,Z,$,e("table",null,[ee,e("tbody",null,[e("tr",null,[te,e("td",le,[l(n,{to:"/apidocs/modules/liff.html#liffbotprompt"},{default:i(()=>[ne]),_:1})]),ie]),oe,e("tr",null,[de,e("td",se,[l(n,{to:"/apidocs/modules/liff.html#lifffeatures"},{default:i(()=>[ae]),_:1})]),fe]),re,ce,e("tr",null,[he,e("td",pe,[l(n,{to:"/apidocs/modules/liff.html#liffscope"},{default:i(()=>[ue]),_:1}),t("[]")]),_e]),e("tr",null,[me,e("td",ge,[l(n,{to:"/apidocs/modules/liff.html#liffview"},{default:i(()=>[be]),_:1})]),ye])])]),xe,e("p",null,[e("a",Le,[t("lib/liff/model/liffApp.ts:18"),l(o)])]),e("p",null,[e("a",Ae,[t("lib/liff/model/liffApp.ts:45"),l(o)])]),ve,e("p",null,[e("a",Fe,[t("lib/liff/model/liffBotPrompt.ts:17"),l(o)])]),Ie,e("p",null,[e("a",qe,[t("lib/liff/model/liffFeatures.ts:13"),l(o)])]),we,e("p",null,[e("a",ke,[t("lib/liff/model/liffScope.ts:17"),l(o)])]),Re,e("table",null,[De,e("tbody",null,[Te,e("tr",null,[Se,e("td",Pe,[l(n,{to:"/apidocs/modules/liff.LiffView.html#typeenum"},{default:i(()=>[Ne]),_:1})]),je]),Oe])]),Ve,e("p",null,[e("a",ze,[t("lib/liff/model/liffView.ts:13"),l(o)])]),e("p",null,[e("a",Ee,[t("lib/liff/model/liffView.ts:34"),l(o)])]),Ue,Be,Ce,Ge,e("table",null,[He,e("tbody",null,[e("tr",null,[Me,e("td",Ke,[l(n,{to:"/apidocs/modules/liff.html#liffbotprompt"},{default:i(()=>[We]),_:1})]),Je]),Qe,e("tr",null,[Xe,e("td",Ye,[l(n,{to:"/apidocs/modules/liff.html#lifffeatures"},{default:i(()=>[Ze]),_:1})]),$e]),et,e("tr",null,[tt,e("td",lt,[l(n,{to:"/apidocs/modules/liff.html#liffscope"},{default:i(()=>[nt]),_:1}),t("[]")]),it]),e("tr",null,[ot,e("td",dt,[l(n,{to:"/apidocs/modules/liff.html#liffview"},{default:i(()=>[st]),_:1})]),at])])]),ft,e("p",null,[e("a",rt,[t("lib/liff/model/updateLiffAppRequest.ts:18"),l(o)])]),e("p",null,[e("a",ct,[t("lib/liff/model/updateLiffAppRequest.ts:53"),l(o)])])])}const mt=a(c,[["render",ht],["__file","liff.html.vue"]]);export{mt as default};

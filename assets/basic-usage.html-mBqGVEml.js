import{_ as c,r as p,o as i,c as l,a as s,b as n,d as a,w as r,e as t}from"./app-WnBvREUy.js";const u={},k=s("h1",{id:"basic-usage",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#basic-usage","aria-hidden":"true"},"#"),n(" Basic Usage")],-1),d={href:"https://nodejs.org/docs/latest/api/modules.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://babeljs.io/learn-es2015/#ecmascript-2015-features-modules",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},b=t(`<p>The library is written in TypeScript and includes TypeScript definitions by default. Nevertheless, it can surely be used with plain JavaScript too.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// CommonJS</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@line/bot-sdk&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ES2015 modules or TypeScript</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> line <span class="token keyword">from</span> <span class="token string">&#39;@line/bot-sdk&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2>`,3),h={href:"https://developers.line.biz/en/docs/messaging-api/getting-started/",target:"_blank",rel:"noopener noreferrer"},g=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">line<span class="token punctuation">.</span>messagingApi<span class="token punctuation">.</span>MessagingApiClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">channelAccessToken</span><span class="token operator">:</span> <span class="token string">&#39;YOUR_CHANNEL_ACCESS_TOKEN&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
line<span class="token punctuation">.</span><span class="token function">middleware</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">channelAccessToken</span><span class="token operator">:</span> <span class="token string">&#39;YOUR_CHANNEL_ACCESS_TOKEN&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">channelSecret</span><span class="token operator">:</span> <span class="token string">&#39;YOUR_CHANNEL_SECRET&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="synopsis" tabindex="-1"><a class="header-anchor" href="#synopsis" aria-hidden="true">#</a> Synopsis</h2>`,2),f={href:"https://expressjs.com/",target:"_blank",rel:"noopener noreferrer"},_=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> line <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@line/bot-sdk&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">channelAccessToken</span><span class="token operator">:</span> <span class="token string">&#39;YOUR_CHANNEL_ACCESS_TOKEN&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">channelSecret</span><span class="token operator">:</span> <span class="token string">&#39;YOUR_CHANNEL_SECRET&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/webhook&#39;</span><span class="token punctuation">,</span> line<span class="token punctuation">.</span><span class="token function">middleware</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  Promise
    <span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>handleEvent<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">line<span class="token punctuation">.</span>messagingApi<span class="token punctuation">.</span>MessagingApiClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">channelAccessToken</span><span class="token operator">:</span> <span class="token string">&#39;YOUR_CHANNEL_ACCESS_TOKEN&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">handleEvent</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>type <span class="token operator">!==</span> <span class="token string">&#39;message&#39;</span> <span class="token operator">||</span> event<span class="token punctuation">.</span>message<span class="token punctuation">.</span>type <span class="token operator">!==</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> client<span class="token punctuation">.</span><span class="token function">replyMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">replyToken</span><span class="token operator">:</span> event<span class="token punctuation">.</span>replyToken<span class="token punctuation">,</span>
    <span class="token literal-property property">messages</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">text</span><span class="token operator">:</span> event<span class="token punctuation">.</span>message<span class="token punctuation">.</span>text
    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),y={href:"https://github.com/line/line-bot-sdk-nodejs/tree/master/examples/",target:"_blank",rel:"noopener noreferrer"};function w(E,x){const e=p("ExternalLinkIcon"),o=p("RouterLink");return i(),l("div",null,[k,s("p",null,[n("It can be imported with "),s("a",d,[n("CommonJS"),a(e)]),n(", "),s("a",v,[n("ES2015 modules"),a(e)]),n(", and preferably "),s("a",m,[n("TypeScript"),a(e)]),n(".")]),b,s("p",null,[n("For the usage of webhook and client, LINE channel access token and secret are needed. About issuing the token and secret, please refer to "),s("a",h,[n("Getting started with the Messaging API"),a(e)]),n(".")]),g,s("p",null,[n("Here is a synopsis of echoing webhook server with "),s("a",f,[n("Express"),a(e)]),n(":")]),_,s("p",null,[n("The full examples with comments can be found in "),s("a",y,[n("examples"),a(e)]),n(".")]),s("p",null,[n("For the specifications of API, please refer to "),a(o,{to:"/api-reference.html"},{default:r(()=>[n("API Reference")]),_:1}),n(".")])])}const S=c(u,[["render",w],["__file","basic-usage.html.vue"]]);export{S as default};

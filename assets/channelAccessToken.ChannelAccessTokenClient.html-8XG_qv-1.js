import{_ as i,r as c,o as d,c as h,a as e,d as n,w as l,b as t,e as a}from"./app-oLbCr_rX.js";const r={},u=e("h1",{id:"class-channelaccesstokenclient",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-channelaccesstokenclient","aria-hidden":"true"},"#"),t(" Class: ChannelAccessTokenClient")],-1),p=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),_=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),f=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),k=e("h2",{id:"constructors-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors-1","aria-hidden":"true"},"#"),t(" Constructors")],-1),y=e("h3",{id:"constructor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructor","aria-hidden":"true"},"#"),t(" constructor")],-1),g=e("strong",null,"new ChannelAccessTokenClient",-1),b=e("code",null,"config",-1),T=e("code",null,"ChannelAccessTokenClient",-1),m=a('<h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>config</code></td><td style="text-align:left;"><code>httpClientConfig</code></td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',3),x=e("code",null,"ChannelAccessTokenClient",-1),A=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),C={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L39",target:"_blank",rel:"noopener noreferrer"},v=e("h2",{id:"methods-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods-1","aria-hidden":"true"},"#"),t(" Methods")],-1),I=e("h3",{id:"getsallvalidchannelaccesstokenkeyids",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getsallvalidchannelaccesstokenkeyids","aria-hidden":"true"},"#"),t(" getsAllValidChannelAccessTokenKeyIds")],-1),R=e("strong",null,"getsAllValidChannelAccessTokenKeyIds",-1),w=e("code",null,"clientAssertionType",-1),D=e("code",null,"clientAssertion",-1),P=e("code",null,"Promise",-1),S=e("code",null,"ChannelAccessTokenKeyIdsResponse",-1),W=a('<p>Gets all valid channel access token key IDs.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>clientAssertionType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>urn:ietf:params:oauth:client-assertion-type:jwt-bearer</code></td></tr><tr><td style="text-align:left;"><code>clientAssertion</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A JSON Web Token (JWT) (opens new window)the client needs to create and sign with the private key.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4>',4),j=e("code",null,"Promise",-1),H=e("code",null,"ChannelAccessTokenKeyIdsResponse",-1),B=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),J=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#get-all-valid-channel-access-token-key-ids-v2-1"}," Documentation")],-1),L=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),N={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L69",target:"_blank",rel:"noopener noreferrer"},V=e("hr",null,null,-1),z=e("h3",{id:"getsallvalidchannelaccesstokenkeyidswithhttpinfo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getsallvalidchannelaccesstokenkeyidswithhttpinfo","aria-hidden":"true"},"#"),t(" getsAllValidChannelAccessTokenKeyIdsWithHttpInfo")],-1),K=e("strong",null,"getsAllValidChannelAccessTokenKeyIdsWithHttpInfo",-1),M=e("code",null,"clientAssertionType",-1),O=e("code",null,"clientAssertion",-1),E=e("code",null,"Promise",-1),G=e("code",null,"ApiResponseType",-1),U=e("code",null,"ChannelAccessTokenKeyIdsResponse",-1),Y=a('<p>Gets all valid channel access token key IDs.. This method includes HttpInfo object to return additional information.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>clientAssertionType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>urn:ietf:params:oauth:client-assertion-type:jwt-bearer</code></td></tr><tr><td style="text-align:left;"><code>clientAssertion</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A JSON Web Token (JWT) (opens new window)the client needs to create and sign with the private key.</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4>',4),q=e("code",null,"Promise",-1),F=e("code",null,"ApiResponseType",-1),Q=e("code",null,"ChannelAccessTokenKeyIdsResponse",-1),X=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),Z=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#get-all-valid-channel-access-token-key-ids-v2-1"}," Documentation")],-1),$=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),ee={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L89",target:"_blank",rel:"noopener noreferrer"},te=e("hr",null,null,-1),ne=e("h3",{id:"issuechanneltoken",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#issuechanneltoken","aria-hidden":"true"},"#"),t(" issueChannelToken")],-1),se=e("strong",null,"issueChannelToken",-1),le=e("code",null,"grantType?",-1),oe=e("code",null,"clientId?",-1),ae=e("code",null,"clientSecret?",-1),ce=e("code",null,"Promise",-1),ie=e("code",null,"IssueShortLivedChannelAccessTokenResponse",-1),de=a('<p>Issue short-lived channel access token</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>grantType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>client_credentials</code></td></tr><tr><td style="text-align:left;"><code>clientId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel ID.</td></tr><tr><td style="text-align:left;"><code>clientSecret?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel secret.</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4>',4),he=e("code",null,"Promise",-1),re=e("code",null,"IssueShortLivedChannelAccessTokenResponse",-1),ue=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),pe=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#issue-shortlived-channel-access-token"}," Documentation")],-1),_e=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),fe={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L112",target:"_blank",rel:"noopener noreferrer"},ke=e("hr",null,null,-1),ye=e("h3",{id:"issuechanneltokenbyjwt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#issuechanneltokenbyjwt","aria-hidden":"true"},"#"),t(" issueChannelTokenByJWT")],-1),ge=e("strong",null,"issueChannelTokenByJWT",-1),be=e("code",null,"grantType?",-1),Te=e("code",null,"clientAssertionType?",-1),me=e("code",null,"clientAssertion?",-1),xe=e("code",null,"Promise",-1),Ae=e("code",null,"IssueChannelAccessTokenResponse",-1),Ce=a('<p>Issues a channel access token that allows you to specify a desired expiration date. This method lets you use JWT assertion for authentication.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>grantType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">client_credentials</td></tr><tr><td style="text-align:left;"><code>clientAssertionType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">urn:ietf:params:oauth:client-assertion-type:jwt-bearer</td></tr><tr><td style="text-align:left;"><code>clientAssertion?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A JSON Web Token the client needs to create and sign with the private key of the Assertion Signing Key.</td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4>',4),ve=e("code",null,"Promise",-1),Ie=e("code",null,"IssueChannelAccessTokenResponse",-1),Re=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),we=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#issue-channel-access-token-v2-1"}," Documentation")],-1),De=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),Pe={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L165",target:"_blank",rel:"noopener noreferrer"},Se=e("hr",null,null,-1),We=e("h3",{id:"issuechanneltokenbyjwtwithhttpinfo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#issuechanneltokenbyjwtwithhttpinfo","aria-hidden":"true"},"#"),t(" issueChannelTokenByJWTWithHttpInfo")],-1),je=e("strong",null,"issueChannelTokenByJWTWithHttpInfo",-1),He=e("code",null,"grantType?",-1),Be=e("code",null,"clientAssertionType?",-1),Je=e("code",null,"clientAssertion?",-1),Le=e("code",null,"Promise",-1),Ne=e("code",null,"ApiResponseType",-1),Ve=e("code",null,"IssueChannelAccessTokenResponse",-1),ze=a('<p>Issues a channel access token that allows you to specify a desired expiration date. This method lets you use JWT assertion for authentication.. This method includes HttpInfo object to return additional information.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>grantType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">client_credentials</td></tr><tr><td style="text-align:left;"><code>clientAssertionType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">urn:ietf:params:oauth:client-assertion-type:jwt-bearer</td></tr><tr><td style="text-align:left;"><code>clientAssertion?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A JSON Web Token the client needs to create and sign with the private key of the Assertion Signing Key.</td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4>',4),Ke=e("code",null,"Promise",-1),Me=e("code",null,"ApiResponseType",-1),Oe=e("code",null,"IssueChannelAccessTokenResponse",-1),Ee=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),Ge=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#issue-channel-access-token-v2-1"}," Documentation")],-1),Ue=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ye={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L188",target:"_blank",rel:"noopener noreferrer"},qe=e("hr",null,null,-1),Fe=e("h3",{id:"issuechanneltokenwithhttpinfo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#issuechanneltokenwithhttpinfo","aria-hidden":"true"},"#"),t(" issueChannelTokenWithHttpInfo")],-1),Qe=e("strong",null,"issueChannelTokenWithHttpInfo",-1),Xe=e("code",null,"grantType?",-1),Ze=e("code",null,"clientId?",-1),$e=e("code",null,"clientSecret?",-1),et=e("code",null,"Promise",-1),tt=e("code",null,"ApiResponseType",-1),nt=e("code",null,"IssueShortLivedChannelAccessTokenResponse",-1),st=a('<p>Issue short-lived channel access token. This method includes HttpInfo object to return additional information.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>grantType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>client_credentials</code></td></tr><tr><td style="text-align:left;"><code>clientId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel ID.</td></tr><tr><td style="text-align:left;"><code>clientSecret?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel secret.</td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4>',4),lt=e("code",null,"Promise",-1),ot=e("code",null,"ApiResponseType",-1),at=e("code",null,"IssueShortLivedChannelAccessTokenResponse",-1),ct=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),it=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#issue-shortlived-channel-access-token"}," Documentation")],-1),dt=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),ht={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L135",target:"_blank",rel:"noopener noreferrer"},rt=e("hr",null,null,-1),ut=e("h3",{id:"issuestatelesschanneltoken",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#issuestatelesschanneltoken","aria-hidden":"true"},"#"),t(" issueStatelessChannelToken")],-1),pt=e("strong",null,"issueStatelessChannelToken",-1),_t=e("code",null,"grantType?",-1),ft=e("code",null,"clientAssertionType?",-1),kt=e("code",null,"clientAssertion?",-1),yt=e("code",null,"clientId?",-1),gt=e("code",null,"clientSecret?",-1),bt=e("code",null,"Promise",-1),Tt=e("code",null,"IssueStatelessChannelAccessTokenResponse",-1),mt=a('<p>Issues a new stateless channel access token, which doesn&#39;t have max active token limit unlike the other token types. The newly issued token is only valid for 15 minutes but can not be revoked until it naturally expires.</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>grantType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>client_credentials</code></td></tr><tr><td style="text-align:left;"><code>clientAssertionType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">URL-encoded value of <code>urn:ietf:params:oauth:client-assertion-type:jwt-bearer</code></td></tr><tr><td style="text-align:left;"><code>clientAssertion?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A JSON Web Token the client needs to create and sign with the private key of the Assertion Signing Key.</td></tr><tr><td style="text-align:left;"><code>clientId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel ID.</td></tr><tr><td style="text-align:left;"><code>clientSecret?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel secret.</td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4>',4),xt=e("code",null,"Promise",-1),At=e("code",null,"IssueStatelessChannelAccessTokenResponse",-1),Ct=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),vt=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#issue-stateless-channel-access-token"}," Documentation")],-1),It=e("h4",{id:"defined-in-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-7","aria-hidden":"true"},"#"),t(" Defined in")],-1),Rt={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L220",target:"_blank",rel:"noopener noreferrer"},wt=e("hr",null,null,-1),Dt=e("h3",{id:"issuestatelesschanneltokenwithhttpinfo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#issuestatelesschanneltokenwithhttpinfo","aria-hidden":"true"},"#"),t(" issueStatelessChannelTokenWithHttpInfo")],-1),Pt=e("strong",null,"issueStatelessChannelTokenWithHttpInfo",-1),St=e("code",null,"grantType?",-1),Wt=e("code",null,"clientAssertionType?",-1),jt=e("code",null,"clientAssertion?",-1),Ht=e("code",null,"clientId?",-1),Bt=e("code",null,"clientSecret?",-1),Jt=e("code",null,"Promise",-1),Lt=e("code",null,"ApiResponseType",-1),Nt=e("code",null,"IssueStatelessChannelAccessTokenResponse",-1),Vt=a('<p>Issues a new stateless channel access token, which doesn&#39;t have max active token limit unlike the other token types. The newly issued token is only valid for 15 minutes but can not be revoked until it naturally expires. . This method includes HttpInfo object to return additional information.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>grantType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>client_credentials</code></td></tr><tr><td style="text-align:left;"><code>clientAssertionType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">URL-encoded value of <code>urn:ietf:params:oauth:client-assertion-type:jwt-bearer</code></td></tr><tr><td style="text-align:left;"><code>clientAssertion?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A JSON Web Token the client needs to create and sign with the private key of the Assertion Signing Key.</td></tr><tr><td style="text-align:left;"><code>clientId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel ID.</td></tr><tr><td style="text-align:left;"><code>clientSecret?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel secret.</td></tr></tbody></table><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4>',4),zt=e("code",null,"Promise",-1),Kt=e("code",null,"ApiResponseType",-1),Mt=e("code",null,"IssueStatelessChannelAccessTokenResponse",-1),Ot=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),Et=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#issue-stateless-channel-access-token"}," Documentation")],-1),Gt=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ut={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L249",target:"_blank",rel:"noopener noreferrer"},Yt=e("hr",null,null,-1),qt=e("h3",{id:"revokechanneltoken",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#revokechanneltoken","aria-hidden":"true"},"#"),t(" revokeChannelToken")],-1),Ft=e("strong",null,"revokeChannelToken",-1),Qt=e("code",null,"accessToken?",-1),Xt=e("code",null,"Promise",-1),Zt=e("code",null,"MessageAPIResponseBase",-1),$t=a('<p>Revoke short-lived or long-lived channel access token</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel access token</td></tr></tbody></table><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h4>',4),en=e("code",null,"Promise",-1),tn=e("code",null,"MessageAPIResponseBase",-1),nn=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),sn=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#revoke-longlived-or-shortlived-channel-access-token"}," Documentation")],-1),ln=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),on={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L278",target:"_blank",rel:"noopener noreferrer"},an=e("hr",null,null,-1),cn=e("h3",{id:"revokechanneltokenbyjwt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#revokechanneltokenbyjwt","aria-hidden":"true"},"#"),t(" revokeChannelTokenByJWT")],-1),dn=e("strong",null,"revokeChannelTokenByJWT",-1),hn=e("code",null,"clientId?",-1),rn=e("code",null,"clientSecret?",-1),un=e("code",null,"accessToken?",-1),pn=e("code",null,"Promise",-1),_n=e("code",null,"MessageAPIResponseBase",-1),fn=a('<p>Revoke channel access token v2.1</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>clientId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel ID</td></tr><tr><td style="text-align:left;"><code>clientSecret?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel Secret</td></tr><tr><td style="text-align:left;"><code>accessToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel access token</td></tr></tbody></table><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10" aria-hidden="true">#</a> Returns</h4>',4),kn=e("code",null,"Promise",-1),yn=e("code",null,"MessageAPIResponseBase",-1),gn=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),bn=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#revoke-channel-access-token-v2-1"}," Documentation")],-1),Tn=e("h4",{id:"defined-in-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-10","aria-hidden":"true"},"#"),t(" Defined in")],-1),mn={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L314",target:"_blank",rel:"noopener noreferrer"},xn=e("hr",null,null,-1),An=e("h3",{id:"revokechanneltokenbyjwtwithhttpinfo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#revokechanneltokenbyjwtwithhttpinfo","aria-hidden":"true"},"#"),t(" revokeChannelTokenByJWTWithHttpInfo")],-1),Cn=e("strong",null,"revokeChannelTokenByJWTWithHttpInfo",-1),vn=e("code",null,"clientId?",-1),In=e("code",null,"clientSecret?",-1),Rn=e("code",null,"accessToken?",-1),wn=e("code",null,"Promise",-1),Dn=e("code",null,"ApiResponseType",-1),Pn=e("code",null,"MessageAPIResponseBase",-1),Sn=a('<p>Revoke channel access token v2.1. This method includes HttpInfo object to return additional information.</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>clientId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel ID</td></tr><tr><td style="text-align:left;"><code>clientSecret?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel Secret</td></tr><tr><td style="text-align:left;"><code>accessToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel access token</td></tr></tbody></table><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns</h4>',4),Wn=e("code",null,"Promise",-1),jn=e("code",null,"ApiResponseType",-1),Hn=e("code",null,"MessageAPIResponseBase",-1),Bn=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),Jn=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#revoke-channel-access-token-v2-1"}," Documentation")],-1),Ln=e("h4",{id:"defined-in-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-11","aria-hidden":"true"},"#"),t(" Defined in")],-1),Nn={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L337",target:"_blank",rel:"noopener noreferrer"},Vn=e("hr",null,null,-1),zn=e("h3",{id:"revokechanneltokenwithhttpinfo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#revokechanneltokenwithhttpinfo","aria-hidden":"true"},"#"),t(" revokeChannelTokenWithHttpInfo")],-1),Kn=e("strong",null,"revokeChannelTokenWithHttpInfo",-1),Mn=e("code",null,"accessToken?",-1),On=e("code",null,"Promise",-1),En=e("code",null,"ApiResponseType",-1),Gn=e("code",null,"MessageAPIResponseBase",-1),Un=a('<p>Revoke short-lived or long-lived channel access token. This method includes HttpInfo object to return additional information.</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel access token</td></tr></tbody></table><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h4>',4),Yn=e("code",null,"Promise",-1),qn=e("code",null,"ApiResponseType",-1),Fn=e("code",null,"MessageAPIResponseBase",-1),Qn=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),Xn=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#revoke-longlived-or-shortlived-channel-access-token"}," Documentation")],-1),Zn=e("h4",{id:"defined-in-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-12","aria-hidden":"true"},"#"),t(" Defined in")],-1),$n={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L291",target:"_blank",rel:"noopener noreferrer"},es=e("hr",null,null,-1),ts=e("h3",{id:"verifychanneltoken",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#verifychanneltoken","aria-hidden":"true"},"#"),t(" verifyChannelToken")],-1),ns=e("strong",null,"verifyChannelToken",-1),ss=e("code",null,"accessToken?",-1),ls=e("code",null,"Promise",-1),os=e("code",null,"VerifyChannelAccessTokenResponse",-1),as=a('<p>Verify the validity of short-lived and long-lived channel access tokens</p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A short-lived or long-lived channel access token.</td></tr></tbody></table><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h4>',4),cs=e("code",null,"Promise",-1),is=e("code",null,"VerifyChannelAccessTokenResponse",-1),ds=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),hs=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#verfiy-channel-access-token"}," Documentation")],-1),rs=e("h4",{id:"defined-in-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-13","aria-hidden":"true"},"#"),t(" Defined in")],-1),us={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L365",target:"_blank",rel:"noopener noreferrer"},ps=e("hr",null,null,-1),_s=e("h3",{id:"verifychanneltokenbyjwt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#verifychanneltokenbyjwt","aria-hidden":"true"},"#"),t(" verifyChannelTokenByJWT")],-1),fs=e("strong",null,"verifyChannelTokenByJWT",-1),ks=e("code",null,"accessToken",-1),ys=e("code",null,"Promise",-1),gs=e("code",null,"VerifyChannelAccessTokenResponse",-1),bs=a('<p>You can verify whether a Channel access token with a user-specified expiration (Channel Access Token v2.1) is valid.</p><h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel access token with a user-specified expiration (Channel Access Token v2.1).</td></tr></tbody></table><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14" aria-hidden="true">#</a> Returns</h4>',4),Ts=e("code",null,"Promise",-1),ms=e("code",null,"VerifyChannelAccessTokenResponse",-1),xs=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),As=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#verfiy-channel-access-token-v2-1"}," Documentation")],-1),Cs=e("h4",{id:"defined-in-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-14","aria-hidden":"true"},"#"),t(" Defined in")],-1),vs={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L399",target:"_blank",rel:"noopener noreferrer"},Is=e("hr",null,null,-1),Rs=e("h3",{id:"verifychanneltokenbyjwtwithhttpinfo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#verifychanneltokenbyjwtwithhttpinfo","aria-hidden":"true"},"#"),t(" verifyChannelTokenByJWTWithHttpInfo")],-1),ws=e("strong",null,"verifyChannelTokenByJWTWithHttpInfo",-1),Ds=e("code",null,"accessToken",-1),Ps=e("code",null,"Promise",-1),Ss=e("code",null,"ApiResponseType",-1),Ws=e("code",null,"VerifyChannelAccessTokenResponse",-1),js=a('<p>You can verify whether a Channel access token with a user-specified expiration (Channel Access Token v2.1) is valid.. This method includes HttpInfo object to return additional information.</p><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel access token with a user-specified expiration (Channel Access Token v2.1).</td></tr></tbody></table><h4 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15" aria-hidden="true">#</a> Returns</h4>',4),Hs=e("code",null,"Promise",-1),Bs=e("code",null,"ApiResponseType",-1),Js=e("code",null,"VerifyChannelAccessTokenResponse",-1),Ls=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),Ns=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#verfiy-channel-access-token-v2-1"}," Documentation")],-1),Vs=e("h4",{id:"defined-in-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-15","aria-hidden":"true"},"#"),t(" Defined in")],-1),zs={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L412",target:"_blank",rel:"noopener noreferrer"},Ks=e("hr",null,null,-1),Ms=e("h3",{id:"verifychanneltokenwithhttpinfo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#verifychanneltokenwithhttpinfo","aria-hidden":"true"},"#"),t(" verifyChannelTokenWithHttpInfo")],-1),Os=e("strong",null,"verifyChannelTokenWithHttpInfo",-1),Es=e("code",null,"accessToken?",-1),Gs=e("code",null,"Promise",-1),Us=e("code",null,"ApiResponseType",-1),Ys=e("code",null,"VerifyChannelAccessTokenResponse",-1),qs=a('<p>Verify the validity of short-lived and long-lived channel access tokens. This method includes HttpInfo object to return additional information.</p><h4 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A short-lived or long-lived channel access token.</td></tr></tbody></table><h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16" aria-hidden="true">#</a> Returns</h4>',4),Fs=e("code",null,"Promise",-1),Qs=e("code",null,"ApiResponseType",-1),Xs=e("code",null,"VerifyChannelAccessTokenResponse",-1),Zs=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),$s=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#verfiy-channel-access-token"}," Documentation")],-1),el=e("h4",{id:"defined-in-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-16","aria-hidden":"true"},"#"),t(" Defined in")],-1),tl={href:"https://github.com/line/line-bot-sdk-nodejs/blob/a13399c/lib/channel-access-token/api/channelAccessTokenClient.ts#L378",target:"_blank",rel:"noopener noreferrer"};function nl(sl,ll){const s=c("RouterLink"),o=c("ExternalLinkIcon");return d(),h("div",null,[e("p",null,[n(s,{to:"/apidocs/"},{default:l(()=>[t("@line/bot-sdk")]),_:1}),t(" / "),n(s,{to:"/apidocs/modules.html"},{default:l(()=>[t("Exports")]),_:1}),t(" / "),n(s,{to:"/apidocs/modules/channelAccessToken.html"},{default:l(()=>[t("channelAccessToken")]),_:1}),t(" / ChannelAccessTokenClient")]),u,e("p",null,[n(s,{to:"/apidocs/modules/channelAccessToken.html"},{default:l(()=>[t("channelAccessToken")]),_:1}),t(".ChannelAccessTokenClient")]),p,_,e("ul",null,[e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#constructor"},{default:l(()=>[t("constructor")]),_:1})])]),f,e("ul",null,[e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#getsallvalidchannelaccesstokenkeyids"},{default:l(()=>[t("getsAllValidChannelAccessTokenKeyIds")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#getsallvalidchannelaccesstokenkeyidswithhttpinfo"},{default:l(()=>[t("getsAllValidChannelAccessTokenKeyIdsWithHttpInfo")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#issuechanneltoken"},{default:l(()=>[t("issueChannelToken")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#issuechanneltokenbyjwt"},{default:l(()=>[t("issueChannelTokenByJWT")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#issuechanneltokenbyjwtwithhttpinfo"},{default:l(()=>[t("issueChannelTokenByJWTWithHttpInfo")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#issuechanneltokenwithhttpinfo"},{default:l(()=>[t("issueChannelTokenWithHttpInfo")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#issuestatelesschanneltoken"},{default:l(()=>[t("issueStatelessChannelToken")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#issuestatelesschanneltokenwithhttpinfo"},{default:l(()=>[t("issueStatelessChannelTokenWithHttpInfo")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#revokechanneltoken"},{default:l(()=>[t("revokeChannelToken")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#revokechanneltokenbyjwt"},{default:l(()=>[t("revokeChannelTokenByJWT")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#revokechanneltokenbyjwtwithhttpinfo"},{default:l(()=>[t("revokeChannelTokenByJWTWithHttpInfo")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#revokechanneltokenwithhttpinfo"},{default:l(()=>[t("revokeChannelTokenWithHttpInfo")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#verifychanneltoken"},{default:l(()=>[t("verifyChannelToken")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#verifychanneltokenbyjwt"},{default:l(()=>[t("verifyChannelTokenByJWT")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#verifychanneltokenbyjwtwithhttpinfo"},{default:l(()=>[t("verifyChannelTokenByJWTWithHttpInfo")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#verifychanneltokenwithhttpinfo"},{default:l(()=>[t("verifyChannelTokenWithHttpInfo")]),_:1})])]),k,y,e("p",null,[t("• "),g,t("("),b,t("): "),n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html"},{default:l(()=>[T]),_:1})]),m,e("p",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html"},{default:l(()=>[x]),_:1})]),A,e("p",null,[e("a",C,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:39"),n(o)])]),v,I,e("p",null,[t("▸ "),R,t("("),w,t(", "),D,t("): "),P,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#channelaccesstokenkeyidsresponse"},{default:l(()=>[S]),_:1}),t(">")]),W,e("p",null,[j,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#channelaccesstokenkeyidsresponse"},{default:l(()=>[H]),_:1}),t(">")]),B,J,L,e("p",null,[e("a",N,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:69"),n(o)])]),V,z,e("p",null,[t("▸ "),K,t("("),M,t(", "),O,t("): "),E,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[G]),_:1}),t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#channelaccesstokenkeyidsresponse"},{default:l(()=>[U]),_:1}),t(">>")]),Y,e("p",null,[q,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[F]),_:1}),t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#channelaccesstokenkeyidsresponse"},{default:l(()=>[Q]),_:1}),t(">>")]),X,Z,$,e("p",null,[e("a",ee,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:89"),n(o)])]),te,ne,e("p",null,[t("▸ "),se,t("("),le,t(", "),oe,t(", "),ae,t("): "),ce,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issueshortlivedchannelaccesstokenresponse"},{default:l(()=>[ie]),_:1}),t(">")]),de,e("p",null,[he,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issueshortlivedchannelaccesstokenresponse"},{default:l(()=>[re]),_:1}),t(">")]),ue,pe,_e,e("p",null,[e("a",fe,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:112"),n(o)])]),ke,ye,e("p",null,[t("▸ "),ge,t("("),be,t(", "),Te,t(", "),me,t("): "),xe,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuechannelaccesstokenresponse"},{default:l(()=>[Ae]),_:1}),t(">")]),Ce,e("p",null,[ve,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuechannelaccesstokenresponse"},{default:l(()=>[Ie]),_:1}),t(">")]),Re,we,De,e("p",null,[e("a",Pe,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:165"),n(o)])]),Se,We,e("p",null,[t("▸ "),je,t("("),He,t(", "),Be,t(", "),Je,t("): "),Le,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[Ne]),_:1}),t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuechannelaccesstokenresponse"},{default:l(()=>[Ve]),_:1}),t(">>")]),ze,e("p",null,[Ke,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[Me]),_:1}),t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuechannelaccesstokenresponse"},{default:l(()=>[Oe]),_:1}),t(">>")]),Ee,Ge,Ue,e("p",null,[e("a",Ye,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:188"),n(o)])]),qe,Fe,e("p",null,[t("▸ "),Qe,t("("),Xe,t(", "),Ze,t(", "),$e,t("): "),et,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[tt]),_:1}),t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issueshortlivedchannelaccesstokenresponse"},{default:l(()=>[nt]),_:1}),t(">>")]),st,e("p",null,[lt,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[ot]),_:1}),t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issueshortlivedchannelaccesstokenresponse"},{default:l(()=>[at]),_:1}),t(">>")]),ct,it,dt,e("p",null,[e("a",ht,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:135"),n(o)])]),rt,ut,e("p",null,[t("▸ "),pt,t("("),_t,t(", "),ft,t(", "),kt,t(", "),yt,t(", "),gt,t("): "),bt,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuestatelesschannelaccesstokenresponse"},{default:l(()=>[Tt]),_:1}),t(">")]),mt,e("p",null,[xt,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuestatelesschannelaccesstokenresponse"},{default:l(()=>[At]),_:1}),t(">")]),Ct,vt,It,e("p",null,[e("a",Rt,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:220"),n(o)])]),wt,Dt,e("p",null,[t("▸ "),Pt,t("("),St,t(", "),Wt,t(", "),jt,t(", "),Ht,t(", "),Bt,t("): "),Jt,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[Lt]),_:1}),t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuestatelesschannelaccesstokenresponse"},{default:l(()=>[Nt]),_:1}),t(">>")]),Vt,e("p",null,[zt,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[Kt]),_:1}),t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuestatelesschannelaccesstokenresponse"},{default:l(()=>[Mt]),_:1}),t(">>")]),Ot,Et,Gt,e("p",null,[e("a",Ut,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:249"),n(o)])]),Yt,qt,e("p",null,[t("▸ "),Ft,t("("),Qt,t("): "),Xt,t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[Zt]),_:1}),t(">")]),$t,e("p",null,[en,t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[tn]),_:1}),t(">")]),nn,sn,ln,e("p",null,[e("a",on,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:278"),n(o)])]),an,cn,e("p",null,[t("▸ "),dn,t("("),hn,t(", "),rn,t(", "),un,t("): "),pn,t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[_n]),_:1}),t(">")]),fn,e("p",null,[kn,t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[yn]),_:1}),t(">")]),gn,bn,Tn,e("p",null,[e("a",mn,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:314"),n(o)])]),xn,An,e("p",null,[t("▸ "),Cn,t("("),vn,t(", "),In,t(", "),Rn,t("): "),wn,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[Dn]),_:1}),t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[Pn]),_:1}),t(">>")]),Sn,e("p",null,[Wn,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[jn]),_:1}),t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[Hn]),_:1}),t(">>")]),Bn,Jn,Ln,e("p",null,[e("a",Nn,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:337"),n(o)])]),Vn,zn,e("p",null,[t("▸ "),Kn,t("("),Mn,t("): "),On,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[En]),_:1}),t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[Gn]),_:1}),t(">>")]),Un,e("p",null,[Yn,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[qn]),_:1}),t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[Fn]),_:1}),t(">>")]),Qn,Xn,Zn,e("p",null,[e("a",$n,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:291"),n(o)])]),es,ts,e("p",null,[t("▸ "),ns,t("("),ss,t("): "),ls,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[os]),_:1}),t(">")]),as,e("p",null,[cs,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[is]),_:1}),t(">")]),ds,hs,rs,e("p",null,[e("a",us,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:365"),n(o)])]),ps,_s,e("p",null,[t("▸ "),fs,t("("),ks,t("): "),ys,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[gs]),_:1}),t(">")]),bs,e("p",null,[Ts,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[ms]),_:1}),t(">")]),xs,As,Cs,e("p",null,[e("a",vs,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:399"),n(o)])]),Is,Rs,e("p",null,[t("▸ "),ws,t("("),Ds,t("): "),Ps,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[Ss]),_:1}),t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[Ws]),_:1}),t(">>")]),js,e("p",null,[Hs,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[Bs]),_:1}),t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[Js]),_:1}),t(">>")]),Ls,Ns,Vs,e("p",null,[e("a",zs,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:412"),n(o)])]),Ks,Ms,e("p",null,[t("▸ "),Os,t("("),Es,t("): "),Gs,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[Us]),_:1}),t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[Ys]),_:1}),t(">>")]),qs,e("p",null,[Fs,t("<"),n(s,{to:"/apidocs/interfaces/ApiResponseType.html"},{default:l(()=>[Qs]),_:1}),t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[Xs]),_:1}),t(">>")]),Zs,$s,el,e("p",null,[e("a",tl,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:378"),n(o)])])])}const al=i(r,[["render",nl],["__file","channelAccessToken.ChannelAccessTokenClient.html.vue"]]);export{al as default};

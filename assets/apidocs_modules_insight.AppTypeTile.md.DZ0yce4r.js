import{_ as e,c as a,o as t,a2 as i}from"./chunks/framework.C6tTn57k.js";const u=JSON.parse('{"title":"Namespace: AppTypeTile","description":"","frontmatter":{},"headers":[],"relativePath":"apidocs/modules/insight.AppTypeTile.md","filePath":"apidocs/modules/insight.AppTypeTile.md"}'),p={name:"apidocs/modules/insight.AppTypeTile.md"},o=i('<p><a href="./../README.html">@line/bot-sdk</a> / <a href="./../modules.html">Exports</a> / <a href="./insight.html">insight</a> / AppTypeTile</p><h1 id="namespace-apptypetile" tabindex="-1">Namespace: AppTypeTile <a class="header-anchor" href="#namespace-apptypetile" aria-label="Permalink to &quot;Namespace: AppTypeTile&quot;">​</a></h1><p><a href="./insight.html">insight</a>.AppTypeTile</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h3><ul><li><a href="./insight.AppTypeTile.html#apptypeenum">AppTypeEnum</a></li></ul><h2 id="type-aliases-1" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases-1" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="apptypeenum" tabindex="-1">AppTypeEnum <a class="header-anchor" href="#apptypeenum" aria-label="Permalink to &quot;AppTypeEnum&quot;">​</a></h3><p>Ƭ <strong>AppTypeEnum</strong>: <code>&quot;ios&quot;</code> | <code>&quot;android&quot;</code> | <code>&quot;others&quot;</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/line/line-bot-sdk-nodejs/blob/66c9fc1/lib/insight/model/appTypeTile.ts#L25" target="_blank" rel="noreferrer">lib/insight/model/appTypeTile.ts:25</a></p>',11),s=[o];function l(n,r,h,d,c,T){return t(),a("div",null,s)}const f=e(p,[["render",l]]);export{u as __pageData,f as default};
